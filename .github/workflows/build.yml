name: Build

on:
  push:
    branches: ["staging", "main"]

permissions:
  contents: read

jobs:
  create-deployment-artifacts:
    name: Create Deployment artifacts
    runs-on: ubuntu-latest
    environment: ${{ contains(github.ref_name, 'main') && 'production' || 'staging'}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Node installation
        run: npm ci
      - name: Create .env file for build
        run: printf "%s\n" "${{secrets.LARAVEL_ENV}}" > .env
      - name: Build steps
        run: |
          npm run build
      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
      - name: Install Composer dependencies
        run: composer install --optimize-autoloader --no-dev
      - name: Artisan caching
        run: |
          php artisan optimize

      - name: Create deployment archive
        env:
          GITHUB_SHA: ${{github.sha}}
        run: tar -czf ${GITHUB_SHA}.tar.gz --exclude=node_modules --exclude=*.git *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ${{github.sha}}.tar.gz

  prepare-release-on-server:
    runs-on: ubuntu-latest
    needs: [create-deployment-artifacts]
    environment: ${{ contains(github.ref_name, 'main') && 'production' || 'staging'}}
    permissions:
      contents: read
      secrets: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-build
      - name: SCP Command to Transfer Artifact to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          password: ${{secrets.SSH_PASS}}
          port: ${{secrets.SSH_PORT}}
          source: ${{github.sha}}.tar.gz
          target: ${{secrets.SSH_PATH}}/private_html/artifacts
          tar_tmp_path: ${{secrets.SSH_PATH}}/private_html/temp

      - name: SSH Extract artifact and create folders
        uses: appleboy/ssh-action@v1.0.3
        env:
          GITHUB_SHA: ${{github.sha}}
          RELEASE_PATH: ${{secrets.SSH_PATH}}/private_html/releases/${{github.sha}}
          ARTIFACTS_PATH: ${{secrets.SSH_PATH}}/private_html/artifacts
          SERVER_PATH: ${{secrets.SSH_PATH}}/private_html
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          password: ${{secrets.SSH_PASS}}
          port: ${{secrets.SSH_PORT}}
          envs: RELEASE_PATH, ARTIFACTS_PATH, GITHUB_SHA, SERVER_PATH
          script: |
            mkdir -p $RELEASE_PATH
            tar -xzf ${ARTIFACTS_PATH}/${GITHUB_SHA}.tar.gz -C $RELEASE_PATH

            cp -R ${RELEASE_PATH}/storage ${SERVER_PATH}/storage
            rm -rf ${RELEASE_PATH}/storage
            # mkdir -p ${SERVER_PATH}/storage/{app,public,framework,logs}
            # mkdir -p ${SERVER_PATH}/storage/framework/{cache,session,testing,views}
            chmod -R 0777 ${SERVER_PATH}/storage

  activate-release:
    name: "Activate release"
    runs-on: ubuntu-latest
    needs: [create-deployment-artifacts, prepare-release-on-server]
    environment: ${{ contains(github.ref_name, 'main') && 'production' || 'staging'}}
    permissions:
      contents: read
    steps:
      - name: Activate release
        uses: appleboy/ssh-action@v1.0.3
        env:
          GITHUB_SHA: ${{github.sha}}
          RELEASE_PATH: ${{secrets.SSH_PATH}}/private_html/releases/${{github.sha}}
          ACTIVE_RELEASE_PATH: ${{secrets.SSH_PATH}}/public_html/current
          LARAVEL_ENV: ${{secrets.LARAVEL_ENV}}
          BASE_PATH: ${{secrets.SSH_PATH}}/public_html
          STORAGE_PATH: ${{secrets.SSH_PATH}}/private_html/storage
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          password: ${{secrets.SSH_PASS}}
          port: ${{secrets.SSH_PORT}}
          envs: GITHUB_SHA, RELEASE_PATH, ACTIVE_RELEASE_PATH, LARAVEL_ENV, BASE_PATH, STORAGE_PATH
          script: |
            printf "%s\n" "$LARAVEL_ENV" > ${BASE_PATH}/.env
            cd $BASE_PATH 
            rm -r ./current
            cp -r $RELEASE_PATH ./current
            cd $ACTIVE_RELEASE_PATH
            ln -sf ${BASE_PATH}/.env $ACTIVE_RELEASE_PATH
            ln -sf $STORAGE_PATH $ACTIVE_RELEASE_PATH
            composer install --optimize-autoloader --no-dev
            php artisan migrate --force
            php artisan storage:link
            php artisan settings:clear-cache

  clean-up:
    name: "Clean up"
    runs-on: ubuntu-latest
    needs:
      [create-deployment-artifacts, prepare-release-on-server, activate-release]
    environment: ${{ contains(github.ref_name, 'main') && 'production' || 'staging'}}
    steps:
      - name: Clean up
        uses: appleboy/ssh-action@v1.0.3
        env:
          RELEASES_PATH: ${{secrets.SSH_PATH}}/private_html/releases
          ARTIFACTS_PATH: ${{secrets.SSH_PATH}}/private_html/artifacts
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          password: ${{secrets.SSH_PASS}}
          port: ${{secrets.SSH_PORT}}
          envs: RELEASES_PATH, ARTIFACTS_PATH
          script: |
            cd $RELEASES_PATH && ls -t -1 | tail -n +3 | xargs rm -rf
            cd $ARTIFACTS_PATH && ls -t -1 | tail -n +3 | xargs rm -rf
